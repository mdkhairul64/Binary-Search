#include<bits/stdc++.h>
using namespace std;

// the smallest index such that the number at that index
// is greater than or equal to that given number


// in general in the case of the binary search
//  the index which is reamin static i will return this 
// as my anser after all of the iteration

// in this case the low will be static a nd i will return the low

int lowerBound(vector<int>&arr,int x)
{
    int low=0,high=arr.size()-1;

    int ans=-1;

    while(low<=high)
    {
        int mid=(low+high)/2;

        if(arr[mid] >= x)
        {
            ans=mid;
            high=mid-1;
        }

        else{
            low=mid+1;
        }
    }
    return ans;
}
int main()
{
    int n;
    cin>>n;

    vector<int>arr(n);

    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }

    int x;
    cin>>x;


    // lower bound by stl
    
    int lb=lower_bound(arr.begin(),arr.end(),x)-arr.begin();




}
